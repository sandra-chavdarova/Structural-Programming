/*
 Од стандарден влез се читаат N броеви. N не е однапред познато, треба да читате броеви додека да се прочита бројот -1.
 Сместете ги прочитаните броеви во низа. Во секој тест пример ќе има помалку од 100 броеви пред бројот -1.
 Потоа се внесуваат 3 торки од по 4 броеви L, R, V и I. L и R се броеви помеѓу 0 и N-1; во секој тест пример ќе важи L <= R.
 Бројот I ќе има вредност само 0 или 1. Кога I е 0 ќе треба на броевите со индекси во интервалот [L,R] (вклучително на L и R)
 да додадете вредност V. Кога I е 1 ќе треба на броевите со индекси во интервалот (L,R) (не ги вклучува L и R) да додадете вредност V.
 На крај отпечатете ја низата.

 Input:
 0 0 0 0 0 0 0 0 0 0 0 -1
 0 2 5 0
 4 5 3 0
 6 10 9 1

 Result:
 5 5 5 0 3 3 0 9 9 9 0
*/

#include <iostream>

using namespace std;

int main() {
    int a[100], brojac = 0;
    while (cin >> a[brojac] && a[brojac] != -1) {
        brojac++;
    }
    int L, R, V;
    bool I;
    for (int i = 0; i < 3; i++) {
        cin >> L >> R >> V >> I;
        if (I == 1) {
            for (int j = L + 1; j < R; j++) {
                a[j] += V;
            }
        } else if (I == 0) {
            for (int j = L; j <= R; j++) {
                a[j] += V;
            }
        }
    }
    for (int i = 0; i < brojac; i++) {
        cout << a[i] << " ";
    }
    return 0;
}
