/*
 Од стандарден влез се внесува правоаголна матрица.
 Прво се внесуваат димензиите (0<M<100, 1<N<100), а потоа и елементите на матрицата (цели броеви) по редици.
 Да се напише програма која матрицата ќе ја трансформира на следниот начин:
 во зависност од вредноста на првиот елемент во секоја редица (дали е парен или непарен) треба да се пронајде максималната
 (ако првиот елемент во редицата е парен), односно минималната (ако првиот елемент во редицата е непарен) вредност
 од останатите елементи во редицата (не земајќи го предвид првиот елементво редицата)
 и оваа вредност треба да се ископира на местото на првиот елемент во таа редица, а на најзино место треба да се запише 0.
 Доколку минималната/максималната вредност се појавува повеќе пати во редицата се зема онаа која е поблиску до левиот раб на матрицата.
 На излез да се отпечати трансформираната матрица.

 Input:
 5 6
 5 1 2 3 4 5
 6 9 8 7 6 5
 5 9 1 8 2 7
 4 3 5 7 8 4
 2 4 1 2 9 6

 Result:
 1 0 2 3 4 5
 9 0 8 7 6 5
 1 9 0 8 2 7
 8 3 5 7 0 4
 9 4 1 2 0 6
*/

#include <iostream>

using namespace std;

int main() {
    int a[100][100];
    int n, m;
    cin >> n >> m;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cin >> a[i][j];
        }
    }
    for (int i = 0; i < n; i++) {
        int broj = a[i][1], indeks = 1;
        if (a[i][0] % 2) {
            for (int j = 1; j < m; j++) {
                if (a[i][j] < broj) {
                    broj = a[i][j];
                    indeks = j;
                }
            }
            a[i][0] = broj;
            a[i][indeks] = 0;
        } else {
            for (int j = 1; j < m; j++) {
                if (a[i][j] > broj) {
                    broj = a[i][j];
                    indeks = j;
                }
            }
            a[i][0] = broj;
            a[i][indeks] = 0;
        }
    }
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            cout << a[i][j] << " ";
        }
        cout << endl;
    }
    return 0;
}
