/*
 Еден елемент од матрица ја дели матрицата на 4 квадранти (прикажани на сликата).
 Притоа самиот елемент кој ја дели матрицата припаѓа во четвртиот квадрант (-5 во примерот на сликата).
 Од стандарден влез се внесува матрица со димензии NxM (1 <= N, M < 100).
 Потоа се внесуваат два броеви кои претставуваат индекси на еден елемент од матрицата.
 Да се најдат сумите на секој од квадрантите и да се испечатат на стандарен излез. Притоа се печати сумата за првиот квадрант, па за вториот, па третиот и на крај за четвртиот. Доколку не може да се креира квадрант, тогаш за сумата на тој квадрант треба да се испечати 0.

 Input:
 2 3
 5 7 8
 1 2 3
 1 1

 Result:
 15 5 1 5
*/

#include <iostream>

using namespace std;

int main() {
    int n, m, x, y;
    cin >> n >> m;
    int a[n][m];
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
            cin >> a[i][j];
    cin >> y >> x;
    int sum1 = 0, sum2 = 0, sum3 = 0, sum4 = 0;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            if (x == i && y == j) {
                for (int k = y; k < n; k++) {
                    for (int z = x; z < m; z++) {
                        sum4 += a[k][z];
                    }
                }
                for (int k = 0; k < y; k++) {
                    for (int z = x; z < m; z++) {
                        sum1 += a[k][z];
                    }
                }
                for (int k = 0; k < y; k++) {
                    for (int z = 0; z < x; z++) {
                        sum2 += a[k][z];
                    }
                }
                for (int k = y; k < n; k++) {
                    for (int z = 0; z < x; z++) {
                        sum3 += a[k][z];
                    }
                }
            }
        }
    }
    if (x < m && y < n)
        cout << sum1 << " " << sum2 << " " << sum3 << " " << sum4 << endl;
    else
        cout << 0 << endl;
    return 0;
}
